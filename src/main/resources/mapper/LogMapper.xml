<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zouxxyy.blog.core.dao.LogMapper" >
  <resultMap id="BaseResultMap" type="com.zouxxyy.blog.core.entity.Log" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="detail" property="detail" jdbcType="VARCHAR" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, time, type, detail, ip
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zouxxyy.blog.core.entity.Log" >
    insert into log (id, time, type, 
      detail, ip)
    values (#{id,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, #{type,jdbcType=VARCHAR}, 
      #{detail,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zouxxyy.blog.core.entity.Log" >
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="detail != null" >
        detail,
      </if>
      <if test="ip != null" >
        ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zouxxyy.blog.core.entity.Log" >
    update log
    <set >
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zouxxyy.blog.core.entity.Log" >
    update log
    set time = #{time,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=VARCHAR},
      detail = #{detail,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>



  <select id="getLogCount" parameterType="Map" resultType="int">
    select count(*)  from log
  </select>

  <select id="getLogByStartAndLimit" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from log
    <if test="start!=null and limit!=null">
      limit #{start}, #{limit}
    </if>
  </select>
</mapper>