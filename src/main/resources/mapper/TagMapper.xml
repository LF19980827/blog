<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zouxxyy.blog.core.dao.TagMapper" >
  <resultMap id="BaseResultMap" type="com.zouxxyy.blog.core.entity.Tag" >
    <id column="tag_id" property="tagId" jdbcType="INTEGER" />
    <result column="tag_name" property="tagName" jdbcType="VARCHAR" />

    <association property="tagArticleCount" column="tag_id" select="com.zouxxyy.blog.core.dao.ArticleTagRefMapper.getArticleCountByTid"/>
  </resultMap>
  <sql id="Base_Column_List" >
    tag_id, tag_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tag
    where tag_id = #{tagId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tag
    where tag_id = #{tagId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zouxxyy.blog.core.entity.Tag" >
    insert into tag (tag_id, tag_name)
    values (#{tagId,jdbcType=INTEGER}, #{tagName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zouxxyy.blog.core.entity.Tag" >
    insert into tag
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tagId != null" >
        tag_id,
      </if>
      <if test="tagName != null" >
        tag_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tagId != null" >
        #{tagId,jdbcType=INTEGER},
      </if>
      <if test="tagName != null" >
        #{tagName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zouxxyy.blog.core.entity.Tag" >
    update tag
    <set >
      <if test="tagName != null" >
        tag_name = #{tagName,jdbcType=VARCHAR},
      </if>
    </set>
    where tag_id = #{tagId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zouxxyy.blog.core.entity.Tag" >
    update tag
    set tag_name = #{tagName,jdbcType=VARCHAR}
    where tag_id = #{tagId,jdbcType=INTEGER}
  </update>

  <!--以上是逆向工程生成的-->

  <select id="getTagCount" parameterType="Map" resultType="int">
    select count(*)  from tag
  </select>

  <select id="getTagByStartAndLimit" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from tag
    <if test="start!=null and limit!=null">
      limit #{start}, #{limit}
    </if>
  </select>

  <select id="selectByTagName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from tag
    where tag_name = #{tagName,jdbcType=VARCHAR}
  </select>

  <delete id="deleteTagByIds">
    delete from tag
    where tag_id in
    <foreach item="id" collection="array" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>

  <!--    根据文章id获取其所有标签 -->
  <select id="getTagByAid" parameterType="Integer" resultMap="BaseResultMap">
    select tag.*
    from tag, article_tag_ref
    where tag.tag_id=article_tag_ref.tag_id
      and article_tag_ref.article_id=#{aid};
  </select>

  <select id="getTagNamesByIds" resultType="java.lang.String">
    select tag_name
    from tag
    where tag_id in
    <foreach item="id" collection="array" open="(" separator="," close=")">
      #{id}
    </foreach>
  </select>
  
</mapper>